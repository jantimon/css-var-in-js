name: SWC validation

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust tests & lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./swc"
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ./swc/Cargo.toml
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ./swc/Cargo.toml
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ./swc/Cargo.toml --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./swc/Cargo.toml -- -D warnings

  wasm:
    name: Wasm plugin tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-wasi
          override: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./swc"
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install NPM Dependencies
        run: npm i
      - name: Build JS
        run: npm run build
      - name: Build SWC RUST Plugin
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path ./swc/Cargo.toml --release --target wasm32-wasi
      - name: Run tests
        run: npm run test:swc:jest
